#include <Adafruit_GFX.h>
#include <Adafruit_NeoMatrix.h>
#include <Adafruit_NeoPixel.h>
#include <Adafruit_LEDBackpack.h>
#include "RGB.h"
#define PIN 6

;
  Adafruit_NeoMatrix matrix = Adafruit_NeoMatrix(4, 5, PIN,
   NEO_MATRIX_BOTTOM    + NEO_MATRIX_LEFT +
   NEO_MATRIX_ROWS     + NEO_MATRIX_ZIGZAG,
   NEO_GRB              + NEO_KHZ800);

void setup() {
  // put your setup code here, to run once:

  
  Adafruit_NeoMatrix matrix = Adafruit_NeoMatrix(4, 5, PIN,
  NEO_MATRIX_BOTTOM    + NEO_MATRIX_LEFT +
  NEO_MATRIX_ROWS     + NEO_MATRIX_ZIGZAG,
  NEO_GRB              + NEO_KHZ800);
  
  matrix.begin();
  matrix.setBrightness(30);
  matrix.setTextColor( matrix.Color(255, 255, 255) );
  matrix.setTextWrap(false);
  
}
void colorWipe(RGB color, uint8_t wait) {
  Adafruit_NeoMatrix matrix = Adafruit_NeoMatrix(4, 5, PIN,
  NEO_MATRIX_BOTTOM    + NEO_MATRIX_LEFT +
  NEO_MATRIX_ROWS     + NEO_MATRIX_ZIGZAG,
  NEO_GRB              + NEO_KHZ800);
  
  matrix.begin();
  matrix.setBrightness(30);
  matrix.setTextColor( matrix.Color(255, 255, 255) );
  matrix.setTextWrap(false);
  for(uint16_t row=0; row < 5; row++) {
    for (uint16_t column=0; column < 4; column++) {
      matrix.drawPixel(column, row, matrix.Color(color.r, color.g, color.b));
      matrix.show();
      delay(wait);
    }
  }
}

void fadePixel(int x, int y, RGB startColor, RGB endColor, int steps, int wait) {
  Adafruit_NeoMatrix matrix = Adafruit_NeoMatrix(4, 5, PIN,
  NEO_MATRIX_BOTTOM    + NEO_MATRIX_LEFT +
  NEO_MATRIX_ROWS     + NEO_MATRIX_ZIGZAG,
  NEO_GRB              + NEO_KHZ800);
  
  for(int i = 0; i <= steps; i++)
  {
    int newR = startColor.r + (endColor.r - startColor.r) * i / steps;
    int newG = startColor.g + (endColor.g - startColor.g) * i / steps;
    int newB = startColor.b + (endColor.b - startColor.b) * i / steps;

    matrix.drawPixel(x, y, matrix.Color(255, 255, 255));
    matrix.show();
    delay(wait);
  }
}

void drawLogo() {
  int logo[5][4] = {
    {0, 1, 0, 1},
    {1, 0, 1, 0},
    {0, 1, 0, 1},
    {1, 0, 1, 0},
    {0, 1, 0, 1}
  };

  for(int row = 0; row < 5; row++) {
    for(int column = 0; column < 4; column++) {
      if(logo[row][column] == 1) {
        fadePixel(column, row, red, white, 120, 0);
      }
    }
  }
}

void crossFade(RGB startColor, RGB endColor, int steps, int wait) {
  for(int i = 0; i <= steps; i++)
  {
    int newR = startColor.r + (endColor.r - startColor.r) * i / steps;
    int newG = startColor.g + (endColor.g - startColor.g) * i / steps;
    int newB = startColor.b + (endColor.b - startColor.b) * i / steps;

    matrix.fillScreen(matrix.Color(newR, newG, newB));
    matrix.show();
    delay(wait);
  }
}

void scrollText(String textToDisplay) {
   Adafruit_NeoMatrix matrix = Adafruit_NeoMatrix(4, 5, PIN,
  NEO_MATRIX_BOTTOM    + NEO_MATRIX_LEFT +
  NEO_MATRIX_ROWS     + NEO_MATRIX_ZIGZAG,
  NEO_GRB              + NEO_KHZ800);
  
  int x = matrix.width();

  int pixelsInText = textToDisplay.length() * 7;

  matrix.setCursor(x, 0);
  matrix.print(textToDisplay);
  matrix.show();
  delay(150);
}

void loop() {
  // put your main code here, to run repeatedly:

  Adafruit_NeoMatrix matrix = Adafruit_NeoMatrix(4, 5, PIN,
  NEO_MATRIX_BOTTOM    + NEO_MATRIX_LEFT +
  NEO_MATRIX_ROWS     + NEO_MATRIX_ZIGZAG,
  NEO_GRB              + NEO_KHZ800);

matrix.begin();
crossFade(off, white, 50, 5);
delay(1000);

colorWipe(red, 50);
delay(1000);

drawLogo();
delay(2000);


matrix.fillScreen(matrix.Color(red.r, red.g, red.b));
matrix.show();
String twitterHandle = "ATELIER 35";
scrollText(twitterHandle);
scrollText(twitterHandle);
delay(500);

crossFade(red, white, 120, 5);
crossFade(white, off, 120, 5);
delay(1000);
}
